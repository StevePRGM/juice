#pragma once

#include <string>

#include "../sdl.h"
#include "int.h"
#include "../Globals/Window.h"
#include "ase_loader.h"

inline SDL_Texture* LoadImage(SDL_Renderer* renderer, std::string path) {
    SDL_Texture* texture = IMG_LoadTexture(renderer, path.c_str());
    if (!texture) SDL_Log("%s%s", path.c_str(), " not found");
    return texture;
}

static SDL_Texture* LoadAse(SDL_Renderer* renderer, std::string file_path) {
    Ase_Output output = AseLoad(file_path);
    SDL_Texture* texture = SDL_CreateTexture(renderer, SDL_PIXELFORMAT_RGBA8888, SDL_TEXTUREACCESS_STATIC, output.width * output.num_frames, output.height * output.num_frames);
    if (! texture) SDL_Log("Texture could not be created!, %s", file_path.c_str());
    int pitch;
    u8* pixels;
    SDL_LockTexture(texture, NULL, (void**)  & pixels, NULL);
    
    for (int i = 0; i < output.width * output.num_frames * output.height * output.num_frames; i ++) {
        SDL_Log("pixel: %i, %i, %i, %i", pixels[i], pixels[i+1], pixels[i+2], pixels[i+3]);
    }
    return texture;
}